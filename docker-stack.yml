secrets:
  brevo_api_key:
    external: true
  mysql_root_password:
    external: true
  mysql_user_password:
    external: true
volumes:
  mysql-data:
  dufs-data:
  letsencrypt_data:

networks:
  web:
    external: true
  internal:
    driver: overlay

services:

  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false" # don't expose all containers by default
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=dev-nau@krysinfo.fr"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt_data:/letsencrypt
    networks:
      - web
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
      replicas: 1
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`smf2.krysinfo.fr`)&&PathPrefix(`/traefik`)"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.tls.certresolver=le"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
    volumes:
      - mysql-data:/var/lib/mysql
    secrets:
      - mysql_root_password
      - mysql_user_password
    networks:
      - internal
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [ node.role == manager ]

  dufs:
    image: sigoden/dufs:latest
    volumes:
      - dufs-data:/data
    command: -A -p 5000 /data --log
    networks:
      - internal
      - web
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dufs.rule=Host(`smf2.krysinfo.fr`)&&PathPrefix(`/dufs`)"
        - "traefik.http.routers.dufs.entrypoints=websecure"
        - "traefik.http.routers.dufs.tls.certresolver=le"
        - "traefik.http.services.dufs.loadbalancer.server.port=5000"
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

  api:
    image: ghcr.io/krysinfo-dev/mysmartfamily2-api:latest
    environment:
      BREVO_API_KEY_FILE: /run/secrets/brevo_api_key
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
      MYSQL_DB: mydb
      FILE_STORAGE_URL: http://dufs:5000
    secrets:
      - brevo_api_key
      - mysql_user_password
    networks:
      - internal
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`smf2.krysinfo.fr`)&&PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.routers.api.middlewares=strip-prefix@docker"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.strip-prefix.stripprefix.prefixes=/api"
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
    depends_on:
      - dufs
      - mysql

  front:
    image: ghcr.io/krysinfo-dev/mysmartfamily2-front:latest
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`smf2.krysinfo.fr`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=le"
      - "traefik.http.services.front.loadbalancer.server.port=80"
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
    depends_on:
      - api




